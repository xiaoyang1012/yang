<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.yang.pojo.Comment">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="parent_comment_id" jdbcType="VARCHAR" property="parentCommentId" />
    <result column="content_id" jdbcType="VARCHAR" property="contentId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customer_name, parent_comment_id, content_id, content, comment_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="searchCommentsByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    WHERE customer_name like #{value,jdbcType=VARCHAR}
  </select>
  
  <select id="searchCommentsByContent" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
     WHERE content like #{value,jdbcType=VARCHAR}
  </select>
  
  
  
  <select id="getAllCommentList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
  </select>
  
  
  
  <select id="getCommentListByContentId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where content_id = #{id,jdbcType=VARCHAR}
  </select>
  
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yang.pojo.Comment">
    insert into t_comment (id, customer_name, parent_comment_id, 
      content_id, content, comment_date
      )
    values (#{id,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{parentCommentId,jdbcType=VARCHAR}, 
      #{contentId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{commentDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yang.pojo.Comment">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="parentCommentId != null">
        parent_comment_id,
      </if>
      <if test="contentId != null">
        content_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="commentDate != null">
        comment_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="parentCommentId != null">
        #{parentCommentId,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null">
        #{commentDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yang.pojo.Comment">
    update t_comment
    <set>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="parentCommentId != null">
        parent_comment_id = #{parentCommentId,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null">
        content_id = #{contentId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yang.pojo.Comment">
    update t_comment
    set customer_name = #{customerName,jdbcType=VARCHAR},
      parent_comment_id = #{parentCommentId,jdbcType=VARCHAR},
      content_id = #{contentId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      comment_date = #{commentDate,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>